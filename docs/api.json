{
  "openapi": "3.1.1",
  "info": {
    "title": "Translator UI API",
    "description": "API used by the client application to communicate with UI application server",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/session/status": {
      "get": {},
      "post": {}
    },
    "/api/v1/config": {
      "get": {
        "summary": "Get the client configuration",
        "responses": {
          "200": {
            "description": "An object for the client to user to configure itself",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ClientConfig"}
              }
            }
          }
        }
      }
    },
    "api/v1/query": {
      "post": {
        "summary": "Submit a new query to Translator",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ClientQuery"}
            }
          }
        }
      }
    },
    "api/v1/query/{qid}/status": {
      "get": {
        "summary": "Get the status of a query",
        "responses": {
          "200": {
            "description": "An object that contains the status of a query",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ClientQueryStatus"}
              }
            }
          },
          "400": {
            "description": "Sent when the qid query parameter is not valid",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          },
          "500": {
            "description": "Sent when there is an internal error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          }
        }
      }
    },
    "api/v1/query/{qid}/result": {
      "get": {
        "summary": "Get the full result set for a query",
        "responses": {
          "200": {
            "description": "Sends the full result set for the given qid",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ResultMessage"}
              }
            }
          },
          "400": {
            "description": "Sent when the qid query parameter is not valid",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          },
          "500": {
            "description": "Sent when there is an internal error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          }
        }
      }
    },
    "api/v1/query/update": {
      "post": {}
    },
    "api/v1/users/me": {
      "get": {}
    },
    "api/v1/users/me/preferences": {
      "get": {}
      "post": {}
    },
    "api/v1/users/me/queries": {
      "get": {}
      "put": {}
    },
    "api/v1/users/me/queries/delete": {
      "put": {}
    },
    "api/v1/users/me/queries/restore": {
      "put": {}
    },
    "api/v1/users/me/projects": {
      "get": {}
      "post": {}
    },
    "api/v1/users/me/projects/update": {
      "put": {}
    },
    "api/v1/users/me/projects/delete": {
      "put": {}
    },
    "api/v1/users/me/projects/restore": {
      "put": {}
    },
    "api/v1/users/me/bookmarks": {
      "get": {},
      "post": {}
    },
    "api/v1/users/me/bookmarks/{save_id}": {
      "post": {}
    },
    "api/v1/users/me/tags": {
      "get": {},
      "post": {}
    },
    "api/v1/users/me/tags/{save_id}": {
      "post": {},
      "delete": {}
    },
    "api/v1/users/me/saves": {
      "get": {},
      "post": {}
    },
    "api/v1/users/me/saves/{save_id}": {
      "get": {},
      "put": {},
      "delete": {}
    },
    "api/v1/users/me/workspaces": {
      "get": {},
      "post": {}
    },
    "api/v1/users/me/workspaces/{ws_id}": {
      "get": {},
      "put": {},
      "delete": {}
    }
  },
  "components": {
    "schemas": {
      "ClientConfig": {
        "type": "object",
        "properties": {
          "gaID": {"type": "string"},
          "cached_queries": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/CachedQuery"}
          },
          "name_resolver": {"type": "string"},
          "social_providers": {"type": "object"},
          "include_pathfinder": {"type": "boolean"},
          "include_summarization": {"type": "boolean"}
        }
      },
      "CachedQuery": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "type": {
            "type": "string",
            "enum": ["drug", "gene", "chemical"]
          },
          "allow_inbound": {"type": "boolean"},
          "allow_outbound": {"type": "boolean"},
          "uuid": {"type": "string"},
          "id": {"type": "string"}
        }
      },
      "ClientQuery": {
        "oneOf": [
          {"$ref": "#/components/schemas/SmartQuery"},
          {"$ref": "#/components/schemas/PathfinderQuery"}
        ]
      },
      "SmartQuery": {
        "type": "object",
        "properties": {
          "curie": {"type": "string"},
          "type": {
            "type": "string",
            "enum": ["drug", "gene", "chemical"]
          },
          "direction": {
            "type": ["string", "null"],
            "enum": ["increased", "decreased", null]
          },
          "pid": {"type": ["integer", "null"]},
          "node_one_label": "string"
        }
      },
      "PathfinderQuery": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["pathfinder"]
          },
          "subject": {"$ref": "#/components/schemas/ClientQueryNode"},
          "object": {"$ref": "#/components/schemas/ClientQueryNode"}
          "pid": {"type": ["string", "null"]},
          "constraint": {
            "type": ["string", "null"],
            "enum": [
              "biolink:ChemicalEntity",
              "biolink:Disease",
              "biolink:Drug",
              "biolink:Gene",
              "biolink:PhenotypicFeature",
              null
            ]
          }
          "node_one_label": {"type": "string"},
          "node_two_label": {"type": "string"}
        }
      },
      "ClientQueryNode": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "category": {"type": "string"}
        }
      },
      "ClientQueryStatus": {
        "type": "object",
        "properties": {
          "status": {"$ref": "#/components/schemas/ArsStatus"},
          "data": {
            "type": "object",
            "properties": {
              "qid": {"type": "string"},
              "aras": {
                "type": "array",
                "items": {"type": "string"}
              },
              "timestamp": {"type": "string"}
            }
          }
        }
      },
      "ResultMessage": {
        "type": "object",
        "properties": {
          "status": {"$ref": "#/components/schemas/ArsStatus"},
          "data": {"$ref": "#/components/schemas/Summary"}
          }
        }
      },
      "ArsStatus": {
        "type": "string",
        "enum": ["running", "complete", "error"]
      },
      "Summary": {
        "type": "object",
        "properties": {
          "meta": {"$ref": "#/components/schemas/SummaryMetadata"},
          "results": {"$ref": "#/components/schemas/SummaryResults"},
          "paths": {"$ref": "#/components/schemas/SummaryPaths"},
          "nodes": {"$ref": "#/components/schemas/SummaryNodes"},
          "edges": {"$ref": "#/components/schemas/SummaryEdges"},
          "publications": {"$ref": "#/components/schemas/SummaryPublications"},
          "trials": {"$ref": "#/components/schemas/SummaryTrials"},
          "tags": {"$ref": "#/components/schemas/SummaryTags"},
          "errors": {"$ref": "#/components/schemas/SummaryErrors"}
        }
      },
      "SummaryMetadata": {
        "type": "object",
        "properties": {
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"]
          },
          "data": {"type": "string"}
        }
      }
    }
  }
}
